module.exports=__NEXT_REGISTER_PAGE("/docs/examples/create-react-app",function(){var e=webpackJsonp([53],{743:function(e,t,a){e.exports=a(744)},744:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:true});var n=a(0);var l=a.n(n);var r=a(10);var o=a.n(r);var c=a(15);var i=a(16);var s=a(22);var u=a(24);var d=a(4);var p=a(30);t["default"]=Object(c["b"])({title:"Building a Single Page Application with Create React App",date:"23 Feb 2017",authors:[i["h"]],editUrl:"pages/docs/examples/create-react-app.js"})(o()(c["a"],function(e){return l.a.createElement("div",{className:"_markdown_"},l.a.createElement(e.p,null,l.a.createElement(e.a,{href:"https://github.com/facebookincubator/create-react-app"},"Create React App")," is a boilerplate tool used to create Single Page Applications with React.js without build configuration. Facebook created CRA and made it the official way to start a new React application."),l.a.createElement(e.p,null,"In this page we're going to focus on how to deploy a Single Page Application made with Create React App to ",l.a.createElement(s["a"],{color:"#000"}),". If you want to learn how to use this boilerplate tool we recommend you to read their ",l.a.createElement(e.a,{href:"https://github.com/facebookincubator/create-react-app/blob/master/README.md"},"repository's README"),"."),l.a.createElement(e.h2,null,"Type of deployment"),l.a.createElement(e.p,null,l.a.createElement(s["a"],{color:"#000"})," let us deploy a simple ",l.a.createElement(u["d"],{href:"/docs/examples/static"},"static site")," without any configuration, and even if a Single Page Application could be considered a static site (since we don't need server side code) is not exactly one and has one special requirement, the routing is handled client side. That means every URL which doesn't resolve to a static file should return the ",l.a.createElement(e.code,null,"index.html")," file so the application can decide if it's a handled URL or not."),l.a.createElement(e.p,null,"Because of this special requirement we can't just do a ",l.a.createElement(u["d"],{href:"/docs/getting-started/deployment#static-deployment"},"static deployment")," and we need to rely into the ",l.a.createElement(u["d"],{href:"/docs/getting-started/deployment#node.js-deployment"},"Node.js")," or ",l.a.createElement(u["d"],{href:"/docs/getting-started/deployment#docker-deployment"},"Docker")," deployment. In this case we're going to use a Node.js one."),l.a.createElement(e.h2,null,"Setup"),l.a.createElement(e.p,null,"We're going to need a HTTP server for our application, there are many possible ones including Apache, NGINX, express-static, etc. But in our case we're going to use ",l.a.createElement(e.a,{href:"https://github.com/zeit/serve"},"serve")," and install it as a dependency in our project."),l.a.createElement(e.p,null,l.a.createElement(p["a"],null,"npm install --save serve")),l.a.createElement(e.p,null,"Then we need to add a script to run this server, because Create React App use ",l.a.createElement(e.code,null,"start")," to run the development server we can decide between changing the default ",l.a.createElement(e.code,null,"start")," script to ",l.a.createElement(e.code,null,"dev")," and run ",l.a.createElement(e.strong,null,"serve")," using ",l.a.createElement(e.code,null,"start")," or we can define a new script called ",l.a.createElement(e.code,null,"now-start"),"."),l.a.createElement(e.p,null,"This new script is going to be used by ",l.a.createElement(s["a"],{color:"#000"})," to run our Node.js application instead of the usual ",l.a.createElement(e.code,null,"start")," script, that way we can continue with the usual workflow of Create React App. And our ",l.a.createElement(e.code,null,"now-start")," script can run the following line."),l.a.createElement(e.p,null,l.a.createElement(p["a"],null,"serve --single ./build")),l.a.createElement(e.p,null,"The ",l.a.createElement(e.code,null,"--single")," (or just ",l.a.createElement(e.code,null,"-s"),") option is going to tell ",l.a.createElement(e.strong,null,"serve")," to run the HTTP server to support a Single Page Application, this means every request which can't be resolved to a static file is going to resolve with the ",l.a.createElement(e.code,null,"index.html")," so we can handle routing client side."),l.a.createElement(e.p,null,"The ",l.a.createElement(e.code,null,"./build")," path is going to define which directory we want our HTTP server to actually serve."),l.a.createElement(e.p,null,"After this the ",l.a.createElement(e.code,null,"package.json")," must looks like this (for a default Create React App project):"),l.a.createElement(e.p,null,l.a.createElement(d["a"],null,'{\n  "name": "project-name",\n  "version": "0.1.0",\n  "private": true,\n  "dependencies": {\n    "react": "^15.6.1",\n    "react-dom": "^15.6.1",\n    "react-scripts": "1.0.13",\n    "serve": "^6.0.6"\n  },\n  "scripts": {\n    "start": "react-scripts start",\n    "now-start": "serve --single ./build",\n    "build": "react-scripts build",\n    "test": "react-scripts test --env=jsdom",\n    "eject": "react-scripts eject"\n  }\n}')),l.a.createElement(e.h2,null,"Deploying the application"),l.a.createElement(e.p,null,"Once we did that we can deploy our application with the following command:"),l.a.createElement(e.p,null,l.a.createElement(p["a"],null,"now")),l.a.createElement(e.p,null,"Once ",l.a.createElement(s["a"],{color:"#000"})," has finished uploading the files, you'll see a URL that points to your freshly created Single Page Application then is going to run ",l.a.createElement(e.code,null,"npm run build")," to build our application code (",l.a.createElement(e.em,null,"we don't need to do build in our local machine"),") and after that start our HTTP server with ",l.a.createElement(e.code,null,"npm run now-start"),"."),l.a.createElement(e.p,null,"But in the case of a real application (not used for testing purposes), you would now have to ",l.a.createElement(u["d"],{href:"/docs/features/aliases"},"assign an alias")," to it."))}))}},[743]);return{page:e.default}});